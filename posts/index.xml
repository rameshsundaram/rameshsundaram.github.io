<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Ramesh Sundaram</title>
        <link>https://rameshsundaram.github.io/posts/</link>
        <description>Recent content in Posts on Ramesh Sundaram</description>
        <generator>Hugo -- gohugo.io</generator>
        <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
        <lastBuildDate>Fri, 07 Jul 2017 20:00:00 +0000</lastBuildDate>
        <atom:link href="https://rameshsundaram.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>The making of the Petty Breakdown, our winning viz in the Tableau contest</title>
            <link>https://rameshsundaram.github.io/posts/2017/07/the-making-of-the-petty-breakdown-our-winning-viz-in-the-tableau-contest/</link>
            <pubDate>Fri, 07 Jul 2017 20:00:00 +0000</pubDate>
            
            <guid>https://rameshsundaram.github.io/posts/2017/07/the-making-of-the-petty-breakdown-our-winning-viz-in-the-tableau-contest/</guid>
            <description>A few weeks (er, maybe months) ago, Atlanta Tableau User Group (ATUG) announced a visualization contest. We, a core team of 3 from Moxie (Zack, John and myself) entered and we won. We also won tickets on the 15th row for the Tom Petty concert in Atlanta, and just a little bit of extra data viz street cred.
Proud! And very thrilled!! But more importantly, we learned a few things along the way.</description>
            <content type="html"><![CDATA[<p><img src="https://media-exp1.licdn.com/dms/image/C4E12AQGeA1Zw2lRqGA/article-inline_image-shrink_1000_1488/0?e=1594857600&amp;v=beta&amp;t=WbON3XCJNRl-9jMYZmP63cFYj3-tVli3O0K6AVMbRsg" alt=""></p>
<p>A few weeks (er, maybe months) ago, Atlanta Tableau User Group (ATUG) announced a visualization contest. We, a core team of 3 from <a href="https://moxieusa.com/">Moxie</a> (<a href="https://www.linkedin.com/in/zackgruczkowski/">Zack</a>, <a href="https://www.linkedin.com/in/johntjacobson/">John</a> and myself) entered and we won. We also won tickets on the 15th row for the Tom Petty concert in Atlanta, and just a little bit of extra data viz street cred.</p>
<p>Proud! And very thrilled!! But more importantly, we learned a few things along the way. Here, I want to share our approach presenting some technical details which might be hopefully helpful for a few.</p>
<h3 id="the-viz">The Viz</h3>
<p>The ask for the competition was quite simple. Tell us a story&hellip;through data&hellip;celebrating <a href="http://www.tompetty.com/?frontpage=true">Tom Petty</a>.</p>
<p>And &hellip;here&rsquo;s our winning Viz.</p>
<p><a href="http://public.tableau.com/profile/ramesh.sundaram1878#!/vizhome/TomPettyAnalysis-Moxie/HistoricalJourney"><img src="https://media-exp1.licdn.com/dms/image/C4E12AQHBkRlvBA6jYg/article-inline_image-shrink_1000_1488/0?e=1594857600&amp;v=beta&amp;t=UY6YPQwQzCt4-2aZEgkD4sNreUq96glclp-jaYHnlGU" alt=""></a></p>
<h3 id="our-approach">Our Approach</h3>
<p>There is no silver bullet to winning competitions but here are a few good practices for visualization problem solving&ndash;we think they might have helped us produce a quality viz and eventually win.</p>
<ol>
<li>Ask good questions</li>
<li>Identify, collect, and prepare data</li>
<li>Make rough (but thoughtful) sketches</li>
<li>Prototype (fast)</li>
<li>Get feedback and repeat</li>
</ol>
<h3 id="ask-good-questions">Ask good questions</h3>
<p>It may be tempting to launch Tableau (or your favorite viz tool) and start tinkering with ideas you have had. We did some of that, but try your best to resist! Find friends or colleagues who might know a thing or two about the subject to see what might be interesting/useful first. The more time you spend carefully thinking about what you want your viz to answer or convey, the less time you need to commit on course correction. One word of caution, as the questions start to flow, start thinking about data sources. Simple Google searches would suffice. This will keep the ideas balanced with the reality of data availability.</p>
<p>Lucky for us, we had a couple of musically inclined and talented folks in the team. They knew a lot more about Tom Petty than I did and brought a lot of very interesting questions. We settled on studying the relationship of musical and lyrical attributes to popularity.</p>
<h3 id="identify-collect-and-prepare-data">Identify, collect and prepare data</h3>
<p>After some research, we discovered that <a href="https://www.spotify.com/us/">Spotify </a>had rich data on musicality and popularity scores which they expose conveniently through the <a href="https://developer.spotify.com/web-api/">Spotify Web API</a>. And, we chose to use <a href="https://genius.com/">Genius </a>for our lyrics, though there are plenty of other sources.</p>
<p>Data sourcing, cleaning and preparation takes a good 60% of a typical successful analytics project. Though that 60% can be fast-tracked with the proper use of scripting languages.</p>
<p>Spotify Web API exposes a REST API and you need a Spotify account and an authorization token to source data from the various <a href="https://developer.spotify.com/web-api/endpoint-reference/">endpoints</a>. We are largely a Python shop and love using it for sourcing and prepping data. There are many helpful libraries in Python, and here are a few examples that we used:</p>
<ol>
<li>
<p><a href="https://docs.python.org/3/library/urllib.html">urllib </a>- to post http requests and read responses.</p>
<pre><code>    def get_Headers():
        headers = {
            'Accept': 'application/json',
            'Authorization': &quot;Bearer {}&quot;.format(OATH_TOKEN)
        }
     return headers
   
    # construct url
    url=base_api + artist_toptracks_endpoint.format(id=artist_id) + &quot;?country=US&quot;
    
    request=urllib.request.Request(url,headers=get_Headers())
    # get response in json
    response=urllib.request.urlopen(request)    
    data = json.loads(response.read())  
</code></pre>
</li>
</ol>
<p>2. <a href="http://pandas.pydata.org/">pandas </a>- to manage the data structures as a table, a helpful library to get the right data format to feed to Tableau. For example, the results you&rsquo;ll get from this api is in json format. Pandas&rsquo; &ldquo;json_normalize&rdquo; method does some miracles under the hood and saves you a ton of time.</p>
<pre><code>    for track in data['tracks']:        
        result = json_normalize(track)
        # do something to manage the data for multiple tracks
</code></pre>
<p>3. <a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/">BeautifulSoup</a> - A great library for scraping and extracting data from DOM elements. If you inspect the webpage to see where your lyrical content is, then it is a few lines of code (at most) to get what you want.</p>
<pre><code>soup = BeautifulSoup(requests.get(lyrics_url).text)
lyrics = soup.find(&quot;div&quot;,{'class':'lyrics'})
</code></pre>
<p>4. <a href="http://www.nltk.org/">nltk</a> - There are several advanced use cases for this library. We used it for some getting word counts, words per sentence, phrases etc. We also compute a custom metric from the lyrics called lexical diversity which is a measure of richness of the language in the lyrics.</p>
<pre><code>def extract_lexical_info(raw_text):
    if(pd.isnull(raw_text)):
        return (0,&quot;NA&quot;);
    else:        
        word_tokens=nltk_helper.word_tokenize(raw_text, remove_stop=False)        
        word_tokens_wo_stop=nltk_helper.word_tokenize(raw_text, remove_stop=True)        
        nltk_text=nltk.Text(word_tokens)
        nltk_text_wo_stop=nltk.Text(word_tokens_wo_stop)
        
        word_count=len(word_tokens)    
        word_count
        lexical_diversity=nltk_helper.lexical_diversity(nltk_text)
        return (word_count, lexical_diversity)
</code></pre>
<h3 id="make-sketches">Make sketches</h3>
<p><img src="https://media-exp1.licdn.com/dms/image/C4E12AQFlQqJZUf4i6A/article-inline_image-shrink_1000_1488/0?e=1594857600&amp;v=beta&amp;t=LKrcYDMPwS0idF_v32XQt1WdJzKaMOdmgfLI8oPxnTA" alt=""></p>
<p>Things you need:</p>
<ol>
<li>An open mind</li>
<li>Few sheets of paper and a pen</li>
<li>Whatever else that will get your creative juices going</li>
<li>Plenty of persistence when your ideas hit a wall</li>
</ol>
<p>At this point, there will likely be a few ideas that seem unrealistic. Our suggestion is to not worry too much about implementation yet. This is the time to push boundaries.</p>
<h3 id="prototype-fast">Prototype (fast)</h3>
<p><img src="https://media-exp1.licdn.com/dms/image/C4E12AQGrGdvlZS0VAA/article-inline_image-shrink_1000_1488/0?e=1594857600&amp;v=beta&amp;t=RJe4s3RRRNIMzltor8uJallscMNWiDm0UXSmlV9EVBk" alt=""></p>
<p>Iterate fast in getting some of the ideas to life. From time to time you&rsquo;ll need to do some Tableau research on the web. There are plenty of resources - we follow <a href="http://www.vizwiz.com/">Andy Kriebel</a>. And the people who follow him and people he follows. One of the videos that helped clean up a lot of our vizzes is <a href="https://www.youtube.com/watch?v=boJcT-lerFQ">50 Viz in 50 mins</a>. Your local Tableau community is always helpful.</p>
<h3 id="get-feedback-and-iterate">Get feedback and iterate</h3>
<p>Bring a colleague or friend to your desk, tell them what you are trying to do and show them what you have. Listen carefully to what they have to say. Incorporate their feedback when reasonable and iterate. This didn&rsquo;t stop for us until we had to turn in our final viz. It&rsquo;s even better to find someone who doesn&rsquo;t normally work in data on a daily basis&ndash;this helps you keep user experience in mind.</p>
<h3 id="our-success">Our success</h3>
<p>Tableau&rsquo;s CMO and CDO were too kind to say a few nice words about our Viz. This is definitely a great recognition for us as we continue to push the boundaries.</p>
<p><a href="https://youtu.be/T-Bazhb9XSk" title="https://youtu.be/T-Bazhb9XSk">https://youtu.be/T-Bazhb9XSk</a></p>
<h3 id="key-contributors-to-the-viz-project">Key contributors to the viz project:</h3>
<ol>
<li>Zack - <a href="https://www.linkedin.com/in/zackgruczkowski/" title="https://www.linkedin.com/in/zackgruczkowski/">https://www.linkedin.com/in/zackgruczkowski/</a></li>
<li>John -<input disabled="" type="checkbox"> (http://%20https//www.linkedin.com/in/johntjacobson/)<a href="https://www.linkedin.com/in/johntjacobson/" title="https://www.linkedin.com/in/johntjacobson/">https://www.linkedin.com/in/johntjacobson/</a></li>
</ol>
]]></content>
        </item>
        
    </channel>
</rss>
